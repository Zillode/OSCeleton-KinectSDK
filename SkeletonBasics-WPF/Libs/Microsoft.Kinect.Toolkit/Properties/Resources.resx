<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DelegateCommandCastException" xml:space="preserve">
    <value>Parameter of type {0} not of of expected type {1}</value>
  </data>
  <data name="MessageAllSet" xml:space="preserve">
    <value>All set!</value>
  </data>
  <data name="MessageAllSetListening" xml:space="preserve">
    <value>Kinect is listening</value>
  </data>
  <data name="MessageConflict" xml:space="preserve">
    <value>This Kinect is being used by another application.</value>
  </data>
  <data name="MessageError" xml:space="preserve">
    <value>Oops, there is an error.</value>
  </data>
  <data name="MessageInitializing" xml:space="preserve">
    <value>Initializing...</value>
  </data>
  <data name="MessageInsufficientBandwidth" xml:space="preserve">
    <value>Too many USB devices! Please unplug one or more.</value>
  </data>
  <data name="MessageNoAvailableSensors" xml:space="preserve">
    <value>Kinect required</value>
  </data>
  <data name="MessageNotGenuine" xml:space="preserve">
    <value>This sensor is not genuine!</value>
  </data>
  <data name="MessageNotPowered" xml:space="preserve">
    <value>Plug my power cord in!</value>
  </data>
  <data name="MessageNotSupported" xml:space="preserve">
    <value>Kinect for Xbox not supported.</value>
  </data>
  <data name="MoreInformationConflict" xml:space="preserve">
    <value>This application needs a Kinect for Windows sensor in order to function. However, another application is using the Kinect Sensor.</value>
  </data>
  <data name="MoreInformationError" xml:space="preserve">
    <value>The Kinect Sensor is plugged in, however an error has occurred. For steps to resolve, please click the "Help" link.</value>
  </data>
  <data name="MoreInformationInsufficientBandwidth" xml:space="preserve">
    <value>The Kinect Sensor needs the majority of the USB Bandwidth of a USB Controller. If other devices are in contention for that bandwidth, the Kinect Sensor may not be able to function.</value>
  </data>
  <data name="MoreInformationNoAvailableSensors" xml:space="preserve">
    <value>This application needs a Kinect for Windows sensor in order to function. Please plug one into the PC.</value>
  </data>
  <data name="MoreInformationNotGenuine" xml:space="preserve">
    <value>This application needs a genuine Kinect for Windows sensor in order to function. Please plug one into the PC.</value>
  </data>
  <data name="MoreInformationNotPowered" xml:space="preserve">
    <value>The Kinect Sensor is plugged into the computer with its USB connection, but the power plug appears to be not powered.</value>
  </data>
  <data name="MoreInformationNotSupported" xml:space="preserve">
    <value>This application needs a Kinect for Windows sensor in order to function. Please plug one into the PC.</value>
  </data>
  <data name="NoDefaultBrowserAvailable" xml:space="preserve">
    <value>Unable to launch the default web browser. Trying to navigate to: {0}</value>
  </data>
</root>